version: '3.8'

services:
  # Existing Shop Flow application (keep unchanged)
  app:
    build: ./Shop-Flow
    ports:
      - "3000:3000"
    networks:
      - web-network
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  # New SFC Order Frontend - Using registry images
  sfc-order-frontend:
    image: your-registry.com/sfc-order/frontend:latest
    expose:
      - "3000"
    networks:
      - web-network
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://sfc-order-backend:3001
    depends_on:
      - sfc-order-backend
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sfc-order.rule=PathPrefix(`/orders`)"

  # New SFC Order Backend - Using registry images  
  sfc-order-backend:
    image: your-registry.com/sfc-order/backend:latest
    expose:
      - "3001"
    networks:
      - web-network
    environment:
      - NODE_ENV=production
      - CORS_ORIGIN=https://app.soulfoodcafe.es
    volumes:
      - sfc-order-data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./htpasswd:/etc/nginx/.htpasswd:ro
    networks:
      - web-network
    depends_on:
      - app
      - sfc-order-frontend
      - sfc-order-backend
    restart: unless-stopped

networks:
  web-network:
    driver: bridge

volumes:
  sfc-order-data:
    driver: local