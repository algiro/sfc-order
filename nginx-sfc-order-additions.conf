# SFC Order Nginx Configuration for Existing app-gateway

# Add this configuration to your existing app-gateway/nginx.conf file
# This assumes your existing nginx.conf is in ./app-gateway/ directory

# Add these upstream definitions to your existing nginx.conf:

upstream shop_flow {
    server web:80;  # Assuming your shop-flow-web container serves on port 80
}

upstream sfc_order_frontend {
    server sfc-order-frontend:3000;
}

upstream sfc_order_backend {
    server sfc-order-backend:3001;
}

# Update your existing server block to include these new location blocks:

# SFC Order Application (NEW) - /orders path
location /orders {
    # Remove auth for public order system
    auth_basic off;
    
    # Rate limiting for order system (if you have rate limiting configured)
    # limit_req zone=orders burst=20 nodelay;
    
    # Proxy to SFC Order frontend
    proxy_pass http://sfc_order_frontend/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # Handle static assets
    proxy_set_header X-Original-URI $request_uri;
    proxy_redirect off;
}

# SFC Order API (NEW) - /orders/api path
location /orders/api/ {
    # Remove auth for public API
    auth_basic off;
    
    # Rate limiting for API (if configured)
    # limit_req zone=api burst=30 nodelay;
    
    # Remove /orders prefix for backend
    rewrite ^/orders/api/(.*) /api/$1 break;
    
    # Proxy to SFC Order backend
    proxy_pass http://sfc_order_backend;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # CORS headers for API
    add_header Access-Control-Allow-Origin "https://app.soulfoodcafe.es" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "https://app.soulfoodcafe.es";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
        add_header Access-Control-Max-Age 86400;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }
}

# Health check endpoints (NEW) - no auth required
location /orders/health {
    auth_basic off;
    proxy_pass http://sfc_order_frontend/health;
    access_log off;
}

location /orders/api/health {
    auth_basic off;
    rewrite ^/orders/api/health$ /health break;
    proxy_pass http://sfc_order_backend;
    access_log off;
}

# Your existing location blocks for Shop Flow remain unchanged
# Just make sure the root location / still points to your shop flow:
# location / {
#     # Your existing shop flow configuration
#     proxy_pass http://shop_flow;
#     # ... rest of your existing config
# }